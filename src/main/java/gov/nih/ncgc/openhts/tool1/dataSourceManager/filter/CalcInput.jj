
/* input file to javacc */

options {
  USER_TOKEN_MANAGER = true;
}

PARSER_BEGIN(CalcInputParser)
package gov.nih.ncgc.openhts.tool1.dataSourceManager.filter;

public class CalcInputParser {

}

PARSER_END(CalcInputParser)

void Input(CalcGUI calcGUI) :
	{
	  double larg = 0.0;
	  double rarg;
	}
{
  ( 
    [larg=Number(calcGUI) {calcGUI.print(larg);}]
    (   <ADD> rarg=Number(calcGUI) {larg = larg + rarg; calcGUI.print(larg);} 
      | <SUB> rarg=Number(calcGUI) {larg = larg - rarg; calcGUI.print(larg);}
      | <MUL> rarg=Number(calcGUI) {larg = larg * rarg; calcGUI.print(larg);}
      | <DIV> rarg=Number(calcGUI) {larg = (rarg==0) ? Float.POSITIVE_INFINITY : (larg / rarg); calcGUI.print(larg);}
    )*
    <EQ: "=" >
  )*
}

double Number(CalcGUI calcGUI) :
	{
	  Token t;
	  String image = "";
	  double value = 0.0;
	  double decimalPlace = 1.0;
	}
{
  (
    t=<DIGIT>	{image += t.image;value = value*10 + Integer.parseInt(t.image);calcGUI.print(image);}
  )+
  [
    <DOT>
	{
	  image += ".";
	  calcGUI.print(image);
	}
    (
      t=<DIGIT>
	{
	  image += t.image;
	  decimalPlace *= 0.1;
	  value = value + Integer.parseInt(t.image)*decimalPlace;
	  calcGUI.print(image);
	}
    )+
  ]
	{
	  return value;
	}
|
  <DOT>
	{
	  image = "0.";
	  calcGUI.print(image);
	}
  (
    t=<DIGIT>
	{
	  image += t.image;
	  decimalPlace *= 0.1;
	  value = value + Integer.parseInt(t.image)*decimalPlace;
	  calcGUI.print(image);
	}
  )+
	{
	  return value;
	}
}
