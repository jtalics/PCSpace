(************** Content-type: application/mathematica **************

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     18465,        514]*)
(*NotebookOutlinePosition[     19173,        538]*)
(*  CellTagsIndexPosition[     19129,        534]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(<< Graphics`\)\)\)], "Input"],

Cell[BoxData[
    \(AC50\  = \ \(-8\); \ n = 1; \ S0 = 0; Sinf = 1;\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Y\  = \ 
      S0\  + \ \((Sinf - S0)\)\ /\ \((1 + \((10^AC50/10^X)\)^n)\)\)], "Input"],

Cell[BoxData[
    \(1\/\(1 + 10\^\(\(-8\) - X\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plot[Y, {X, \ \(-9\), \ \(-7\)}, 
      PlotRange\  \[Rule] \ {S0, Sinf}]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
4.30952 0.476191 0 0.618034 [
[.2619 -0.0125 -12 -9 ]
[.2619 -0.0125 12 0 ]
[.5 -0.0125 -6 -9 ]
[.5 -0.0125 6 0 ]
[.7381 -0.0125 -12 -9 ]
[.7381 -0.0125 12 0 ]
[.97619 -0.0125 -6 -9 ]
[.97619 -0.0125 6 0 ]
[.01131 .12361 -18 -4.5 ]
[.01131 .12361 0 4.5 ]
[.01131 .24721 -18 -4.5 ]
[.01131 .24721 0 4.5 ]
[.01131 .37082 -18 -4.5 ]
[.01131 .37082 0 4.5 ]
[.01131 .49443 -18 -4.5 ]
[.01131 .49443 0 4.5 ]
[.01131 .61803 -6 -4.5 ]
[.01131 .61803 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2619 0 m
.2619 .00625 L
s
[(-8.5)] .2619 -0.0125 0 1 Mshowa
.5 0 m
.5 .00625 L
s
[(-8)] .5 -0.0125 0 1 Mshowa
.7381 0 m
.7381 .00625 L
s
[(-7.5)] .7381 -0.0125 0 1 Mshowa
.97619 0 m
.97619 .00625 L
s
[(-7)] .97619 -0.0125 0 1 Mshowa
.125 Mabswid
.07143 0 m
.07143 .00375 L
s
.11905 0 m
.11905 .00375 L
s
.16667 0 m
.16667 .00375 L
s
.21429 0 m
.21429 .00375 L
s
.30952 0 m
.30952 .00375 L
s
.35714 0 m
.35714 .00375 L
s
.40476 0 m
.40476 .00375 L
s
.45238 0 m
.45238 .00375 L
s
.54762 0 m
.54762 .00375 L
s
.59524 0 m
.59524 .00375 L
s
.64286 0 m
.64286 .00375 L
s
.69048 0 m
.69048 .00375 L
s
.78571 0 m
.78571 .00375 L
s
.83333 0 m
.83333 .00375 L
s
.88095 0 m
.88095 .00375 L
s
.92857 0 m
.92857 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
.02381 .12361 m
.03006 .12361 L
s
[(0.2)] .01131 .12361 1 0 Mshowa
.02381 .24721 m
.03006 .24721 L
s
[(0.4)] .01131 .24721 1 0 Mshowa
.02381 .37082 m
.03006 .37082 L
s
[(0.6)] .01131 .37082 1 0 Mshowa
.02381 .49443 m
.03006 .49443 L
s
[(0.8)] .01131 .49443 1 0 Mshowa
.02381 .61803 m
.03006 .61803 L
s
[(1)] .01131 .61803 1 0 Mshowa
.125 Mabswid
.02381 .0309 m
.02756 .0309 L
s
.02381 .0618 m
.02756 .0618 L
s
.02381 .09271 m
.02756 .09271 L
s
.02381 .15451 m
.02756 .15451 L
s
.02381 .18541 m
.02756 .18541 L
s
.02381 .21631 m
.02756 .21631 L
s
.02381 .27812 m
.02756 .27812 L
s
.02381 .30902 m
.02756 .30902 L
s
.02381 .33992 m
.02756 .33992 L
s
.02381 .40172 m
.02756 .40172 L
s
.02381 .43262 m
.02756 .43262 L
s
.02381 .46353 m
.02756 .46353 L
s
.02381 .52533 m
.02756 .52533 L
s
.02381 .55623 m
.02756 .55623 L
s
.02381 .58713 m
.02756 .58713 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .05618 m
.06244 .06648 L
.10458 .07957 L
.14415 .09381 L
.18221 .10941 L
.22272 .12817 L
.26171 .14838 L
.30316 .17213 L
.34309 .1971 L
.3815 .22283 L
.42237 .25169 L
.46172 .2805 L
.49955 .30868 L
.53984 .33869 L
.57861 .36705 L
.61984 .39612 L
.65954 .42263 L
.69774 .44644 L
.73838 .46971 L
.77751 .48998 L
.81909 .50919 L
.85916 .52549 L
.89771 .53922 L
.93871 .55188 L
.97619 .56185 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00E@3oool2000000@0oooo0P0000040?ooo`800000=P3oool2000003H0oooo00<000000?oo
o`3oool00P3oool2000000@0oooo0P00000g0?ooo`030000003oool0oooo00P0oooo001D0?ooo`04
0000003oool0oooo000000P0oooo00@000000?ooo`3oool00000=03oool010000000oooo0?ooo`00
000e0?ooo`030000003oool0oooo00L0oooo00@000000?ooo`3oool00000=P3oool00`000000oooo
0?ooo`080?ooo`00E03oool010000000oooo0?ooo`00000;0?ooo`030000003oool0oooo0380oooo
00@000000?ooo`3oool00000=@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo03@0
oooo00<000000?ooo`3oool0203oool004h0oooo100000030?ooo`8000002P3oool2000002l0oooo
100000030?ooo`800000;P3oool4000000D0oooo00<000000?ooo`3oool01`3oool2000002l0oooo
100000050?ooo`030000003oool0oooo00L0oooo001D0?ooo`040000003oool0oooo000000T0oooo
00<000000?ooo`3oool0=03oool010000000oooo0?ooo`00000c0?ooo`040000003oool0oooo0000
00T0oooo00<000000?ooo`3oool0=03oool010000000oooo0?ooo`0000090?ooo`00E@3oool20000
00X0oooo0`00000e0?ooo`800000=03oool4000000T0oooo0`00000d0?ooo`@000002@3oool00?l0
oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool001D0
ooooo`000005000000L0oooo000K0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`0;0?ooo`006`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo000K
0?ooo`030000003oool0oooo0?l0oooo0`3oool001/0oooo00<000000?ooo`3oool0o`3oool30?oo
o`006`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo000K0?ooo`030000003oool0oooo0?l0oooo
0`3oool001/0oooo00<000000?ooo`3oool0o`3oool30?ooo`006`3oool200000?l0oooo103oool0
01/0oooo00<000000?ooo`3oool0o`3oool30?ooo`006`3oool00`000000oooo0?ooo`3o0?ooo`<0
oooo000K0?ooo`030000003oool0oooo0?l0oooo0`3oool001/0oooo00<000000?ooo`3oool0o`3o
ool30?ooo`006`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo000K0?ooo`800000o`3oool40?oo
o`006`3oool00`000000oooo0000000200000?l0oooo0@3oool001/0oooo0P0000030?ooo`@00000
o03oool001/0oooo00<000000?ooo`3oool01P3oool300000?T0oooo000K0?ooo`030000003oool0
oooo00T0oooo1000003e0?ooo`006`3oool00`000000oooo0?ooo`0=0?ooo`@00000l@3oool001/0
oooo00<000000?ooo`3oool04@3oool300000>h0oooo000K0?ooo`030000003oool0oooo01@0oooo
0P00003/0?ooo`006`3oool00`000000oooo0?ooo`0F0?ooo`<00000j@3oool001/0oooo00<00000
0?ooo`3oool06@3oool200000>L0oooo000K0?ooo`800000703oool300000>@0oooo000K0?ooo`03
0000003oool0oooo01h0oooo0P00003R0?ooo`006`3oool00`000000oooo0?ooo`0P0?ooo`<00000
g`3oool001/0oooo00<000000?ooo`3oool08`3oool200000=d0oooo000K0?ooo`030000003oool0
oooo02D0oooo0`00003J0?ooo`006`3oool00`000000oooo0?ooo`0X0?ooo`800000f03oool000P0
oooo0P0000040?ooo`8000000`3oool4000000@0oooo00<000000?ooo`3oool0:P3oool200000=H0
oooo00070?ooo`040000003oool0oooo000000P0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`0/0?ooo`800000e03oool000L0oooo00@000000?ooo`3oool000002@3oool00`000000
oooo0?ooo`040?ooo`<00000;P3oool200000=80oooo00070?ooo`040000003oool0oooo000000X0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0`0?ooo`800000d03oool000L0oooo
00@000000?ooo`3oool00000203oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo
0380oooo0P00003>0?ooo`00203oool2000000X0oooo0P0000050?ooo`030000003oool0oooo03@0
oooo0P00003<0?ooo`006`3oool00`000000oooo0?ooo`0f0?ooo`800000bP3oool001/0oooo00<0
00000?ooo`3oool0>03oool200000<P0oooo000K0?ooo`030000003oool0oooo03X0oooo0P000036
0?ooo`006`3oool00`000000oooo0?ooo`0l0?ooo`800000a03oool001/0oooo0P00000o0?ooo`80
0000`P3oool001/0oooo00<000000?ooo`3oool0@03oool200000<00oooo000K0?ooo`030000003o
ool0oooo0480oooo0P00002n0?ooo`006`3oool00`000000oooo0?ooo`140?ooo`800000_03oool0
01/0oooo00<000000?ooo`3oool0AP3oool00`000000oooo0?ooo`2i0?ooo`006`3oool00`000000
oooo0?ooo`170?ooo`800000^@3oool001/0oooo00<000000?ooo`3oool0B@3oool00`000000oooo
0?ooo`2f0?ooo`006`3oool00`000000oooo0?ooo`1:0?ooo`030000003oool0oooo0;D0oooo000K
0?ooo`800000C03oool200000;D0oooo000K0?ooo`030000003oool0oooo04d0oooo00<000000?oo
o`3oool0/P3oool001/0oooo00<000000?ooo`3oool0CP3oool200000;80oooo000K0?ooo`030000
003oool0oooo0500oooo00<000000?ooo`3oool0[`3oool001/0oooo00<000000?ooo`3oool0D@3o
ool200000:l0oooo000K0?ooo`030000003oool0oooo05<0oooo00<000000?ooo`3oool0[03oool0
01/0oooo00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`2[0?ooo`006`3oool00`000000
oooo0?ooo`1E0?ooo`800000Z`3oool001/0oooo0P00001H0?ooo`030000003oool0oooo0:P0oooo
000K0?ooo`030000003oool0oooo05P0oooo0P00002X0?ooo`006`3oool00`000000oooo0?ooo`1J
0?ooo`030000003oool0oooo0:D0oooo000K0?ooo`030000003oool0oooo05/0oooo0P00002U0?oo
o`006`3oool00`000000oooo0?ooo`1M0?ooo`030000003oool0oooo0:80oooo000K0?ooo`030000
003oool0oooo05h0oooo00<000000?ooo`3oool0X@3oool000P0oooo0P0000040?ooo`8000001@3o
ool3000000<0oooo00<000000?ooo`3oool0G`3oool200000:40oooo00070?ooo`040000003oool0
oooo000000/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`1Q0?ooo`030000003o
ool0oooo09h0oooo00070?ooo`040000003oool0oooo000000P0oooo1@0000030?ooo`<00000HP3o
ool2000009h0oooo00070?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool00000
103oool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo09/0oooo00070?ooo`040000003o
ool0oooo000000T0oooo00<000000?ooo`000000103oool00`000000oooo0?ooo`1U0?ooo`800000
V`3oool000P0oooo0P00000;0?ooo`800000103oool00`000000oooo0?ooo`1W0?ooo`030000003o
ool0oooo09P0oooo000K0?ooo`030000003oool0oooo06P0oooo00<000000?ooo`3oool0U`3oool0
01/0oooo00<000000?ooo`3oool0J@3oool2000009L0oooo000K0?ooo`030000003oool0oooo06/0
oooo00<000000?ooo`3oool0U03oool001/0oooo00<000000?ooo`3oool0K03oool00`000000oooo
0?ooo`2C0?ooo`006`3oool2000006h0oooo0P00002C0?ooo`006`3oool00`000000oooo0?ooo`1_
0?ooo`030000003oool0oooo0900oooo000K0?ooo`030000003oool0oooo0700oooo00<000000?oo
o`3oool0S`3oool001/0oooo00<000000?ooo`3oool0L@3oool2000008l0oooo000K0?ooo`030000
003oool0oooo07<0oooo00<000000?ooo`3oool0S03oool001/0oooo00<000000?ooo`3oool0M03o
ool00`000000oooo0?ooo`2;0?ooo`006`3oool00`000000oooo0?ooo`1e0?ooo`800000R`3oool0
01/0oooo00<000000?ooo`3oool0M`3oool00`000000oooo0?ooo`280?ooo`006`3oool2000007T0
oooo00<000000?ooo`3oool0Q`3oool001/0oooo00<000000?ooo`3oool0N@3oool2000008L0oooo
000K0?ooo`030000003oool0oooo07/0oooo00<000000?ooo`3oool0Q03oool001/0oooo00<00000
0?ooo`3oool0O03oool00`000000oooo0?ooo`230?ooo`006`3oool00`000000oooo0?ooo`1m0?oo
o`800000P`3oool001/0oooo00<000000?ooo`3oool0O`3oool00`000000oooo0?ooo`200?ooo`00
6`3oool00`000000oooo0?ooo`200?ooo`030000003oool0oooo07l0oooo000K0?ooo`030000003o
ool0oooo0840oooo0P00001o0?ooo`006`3oool2000008@0oooo00<000000?ooo`3oool0O03oool0
01/0oooo00<000000?ooo`3oool0Q03oool2000007`0oooo000K0?ooo`030000003oool0oooo08H0
oooo00<000000?ooo`3oool0N@3oool001/0oooo00<000000?ooo`3oool0Q`3oool00`000000oooo
0?ooo`1h0?ooo`006`3oool00`000000oooo0?ooo`280?ooo`800000N03oool001/0oooo00<00000
0?ooo`3oool0RP3oool00`000000oooo0?ooo`1e0?ooo`00203oool2000000@0oooo0P0000030?oo
o`<000001@3oool00`000000oooo0?ooo`2;0?ooo`800000M@3oool000L0oooo00@000000?ooo`3o
ool00000203oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo08d0oooo00<00000
0?ooo`3oool0LP3oool000L0oooo00@000000?ooo`3oool00000203oool010000000oooo0?ooo`00
00040?ooo`<00000SP3oool200000780oooo00070?ooo`040000003oool0oooo000000P0oooo0`00
00050?ooo`030000003oool0oooo0900oooo00<000000?ooo`3oool0K`3oool000L0oooo00@00000
0?ooo`3oool000002@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0940oooo0P00
001_0?ooo`00203oool2000000X0oooo0`0000040?ooo`030000003oool0oooo09<0oooo0P00001]
0?ooo`006`3oool00`000000oooo0?ooo`2E0?ooo`030000003oool0oooo06X0oooo000K0?ooo`03
0000003oool0oooo09H0oooo0P00001Z0?ooo`006`3oool00`000000oooo0?ooo`2H0?ooo`030000
003oool0oooo06L0oooo000K0?ooo`030000003oool0oooo09T0oooo0P00001W0?ooo`006`3oool2
000009`0oooo00<000000?ooo`3oool0I03oool001/0oooo00<000000?ooo`3oool0W03oool00`00
0000oooo0?ooo`1S0?ooo`006`3oool00`000000oooo0?ooo`2M0?ooo`800000H`3oool001/0oooo
00<000000?ooo`3oool0W`3oool00`000000oooo0?ooo`1P0?ooo`006`3oool00`000000oooo0?oo
o`2P0?ooo`800000H03oool001/0oooo00<000000?ooo`3oool0XP3oool00`000000oooo0?ooo`1M
0?ooo`006`3oool00`000000oooo0?ooo`2S0?ooo`800000G@3oool001/0oooo00<000000?ooo`3o
ool0Y@3oool00`000000oooo0?ooo`1J0?ooo`006`3oool200000:L0oooo00<000000?ooo`3oool0
F@3oool001/0oooo00<000000?ooo`3oool0Y`3oool2000005T0oooo000K0?ooo`030000003oool0
oooo0:T0oooo00<000000?ooo`3oool0EP3oool001/0oooo00<000000?ooo`3oool0ZP3oool20000
05H0oooo000K0?ooo`030000003oool0oooo0:`0oooo00<000000?ooo`3oool0D`3oool001/0oooo
00<000000?ooo`3oool0[@3oool2000005<0oooo000K0?ooo`030000003oool0oooo0:l0oooo0P00
001A0?ooo`006`3oool00`000000oooo0?ooo`2a0?ooo`030000003oool0oooo04h0oooo000K0?oo
o`800000/`3oool2000004h0oooo000K0?ooo`030000003oool0oooo0;@0oooo0P00001<0?ooo`00
6`3oool00`000000oooo0?ooo`2f0?ooo`030000003oool0oooo04T0oooo000K0?ooo`030000003o
ool0oooo0;L0oooo0P0000190?ooo`006`3oool00`000000oooo0?ooo`2i0?ooo`800000A`3oool0
01/0oooo00<000000?ooo`3oool0^`3oool2000004D0oooo00080?ooo`800000103oool2000000@0
oooo0P0000050?ooo`030000003oool0oooo0;d0oooo0P0000130?ooo`001`3oool010000000oooo
0?ooo`0000080?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0_`3oool30000
0400oooo00070?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool00000103oool3
00000<80oooo0P00000n0?ooo`001`3oool010000000oooo0?ooo`0000090?ooo`8000001@3oool0
0`000000oooo0?ooo`340?ooo`800000?03oool000L0oooo00@000000?ooo`3oool00000203oool0
10000000oooo0?ooo`0000040?ooo`030000003oool0oooo0<H0oooo0P00000j0?ooo`00203oool2
000000X0oooo0P0000050?ooo`030000003oool0oooo0<P0oooo0P00000h0?ooo`006`3oool00`00
0000oooo0?ooo`3:0?ooo`<00000=@3oool001/0oooo00<000000?ooo`3oool0c@3oool300000380
oooo000K0?ooo`030000003oool0oooo0=00oooo0P00000`0?ooo`006`3oool00`000000oooo0?oo
o`3B0?ooo`<00000;@3oool001/0oooo0P00003F0?ooo`<00000:P3oool001/0oooo00<000000?oo
o`3oool0f03oool2000002P0oooo000K0?ooo`030000003oool0oooo0=X0oooo0`00000U0?ooo`00
6`3oool00`000000oooo0?ooo`3M0?ooo`8000008`3oool001/0oooo00<000000?ooo`3oool0g`3o
ool300000200oooo000K0?ooo`030000003oool0oooo0>80oooo0`00000M0?ooo`006`3oool00`00
0000oooo0?ooo`3U0?ooo`@000006@3oool001/0oooo00<000000?ooo`3oool0j@3oool4000001D0
oooo000K0?ooo`800000kP3oool500000100oooo000K0?ooo`030000003oool0oooo0?80oooo0`00
000=0?ooo`006`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo000K0?ooo`030000003oool0oooo
0?l0oooo0`3oool001/0oooo00<000000?ooo`3oool0o`3oool30?ooo`006`3oool00`000000oooo
0?ooo`3o0?ooo`<0oooo000K0?ooo`030000003oool0oooo0?l0oooo0`3oool001/0oooo00<00000
0?ooo`3oool0o`3oool30?ooo`006`3oool200000?l0oooo103oool001/0oooo00<000000?ooo`3o
ool0o`3oool30?ooo`006`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo000K0?ooo`030000003o
ool0oooo0?l0oooo0`3oool001/0oooo00<000000?ooo`3oool0o`3oool30?ooo`006`3oool00`00
0000oooo0?ooo`3o0?ooo`<0oooo000C0?ooo`D000000`3oool00`000000oooo0?ooo`3o0?ooo`<0
oooo000E0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0o`3oool30?ooo`005@3o
ool00`000000oooo0?ooo`030?ooo`<00000o`3oool30?ooo`005@3oool00`000000oooo0?ooo`3o
0?ooo`T0oooo000E0?ooo`030000003oool0oooo0?l0oooo2@3oool001@0oooo0P00003o0?ooo`/0
oooo003o0?ooob40oooo0000\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-9.22362, -0.0764114, \
0.00810172, 0.00624232}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(X = {\(-9.25\), \(-9\), \(-8.75\), \ \(-8.5\), \ \(-8.25\), \ \(-8\), \
\(-7.75\), \ \(-7.5\), \ \(-7.25\), \(-7\), \(-6.75\)}\)], "Input"],

Cell[BoxData[
    \({\(-9.25`\), \(-9\), \(-8.75`\), \(-8.5`\), \(-8.25`\), \(-8\), \
\(-7.75`\), \(-7.5`\), \(-7.25`\), \(-7\), \(-6.75`\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(N[Y]\)], "Input"],

Cell[BoxData[
    \({0.05324021520202244`, 0.09090909090909091`, 0.15097955721132328`, 
      0.2402530733520421`, 0.35993500019711494`, 0.5`, 0.6400649998028851`, 
      0.7597469266479578`, 0.8490204427886767`, 0.9090909090909091`, 
      0.9467597847979775`}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Clear[X, \ S0, \ Sinf, \ AC50, \ n]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(D[Y, S0]\)], "Input"],

Cell[BoxData[
    \(1 - 1\/\(1 + \((10\^\(AC50 - X\))\)\^n\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(D[Y, Sinf]\)], "Input"],

Cell[BoxData[
    \(1\/\(1 + \((10\^\(AC50 - X\))\)\^n\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(D[Y, AC50]\)], "Input"],

Cell[BoxData[
    \(\(-\(\(\((10\^\(AC50 - X\))\)\^n\ n\ \((\(-S0\) + Sinf)\)\ Log[
              10]\)\/\((1 + \((10\^\(AC50 - X\))\)\^n)\)\^2\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(D[Y, n]\)], "Input"],

Cell[BoxData[
    \(\(-\(\(\((10\^\(AC50 - X\))\)\^n\ \((\(-S0\) + Sinf)\)\ Log[
              10\^\(AC50 - X\)]\)\/\((1 + \((10\^\(AC50 - X\))\)\^n)\)\^2\)\)\
\)], "Output"]
}, Open  ]]
},
FrontEndVersion->"4.1 for Microsoft Windows",
ScreenRectangle->{{0, 1600}, {0, 1102}},
WindowSize->{780, 740},
WindowMargins->{{18, Automatic}, {Automatic, 23}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1705, 50, 76, 1, 50, "Input"],
Cell[1784, 53, 80, 1, 30, "Input"],

Cell[CellGroupData[{
Cell[1889, 58, 107, 2, 30, "Input"],
Cell[1999, 62, 63, 1, 42, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2099, 68, 106, 2, 30, "Input"],
Cell[2208, 72, 14526, 369, 186, 3078, 223, "GraphicsData", "PostScript", \
"Graphics"],
Cell[16737, 443, 130, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[16904, 451, 159, 2, 30, "Input"],
Cell[17066, 455, 154, 2, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[17257, 462, 37, 1, 30, "Input"],
Cell[17297, 465, 275, 4, 48, "Output"]
}, Open  ]],
Cell[17587, 472, 68, 1, 30, "Input"],

Cell[CellGroupData[{
Cell[17680, 477, 41, 1, 30, "Input"],
Cell[17724, 480, 74, 1, 44, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[17835, 486, 43, 1, 30, "Input"],
Cell[17881, 489, 70, 1, 44, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[17988, 495, 43, 1, 30, "Input"],
Cell[18034, 498, 161, 2, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[18232, 505, 40, 1, 30, "Input"],
Cell[18275, 508, 174, 3, 48, "Output"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

